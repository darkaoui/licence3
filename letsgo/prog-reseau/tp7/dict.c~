#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <sys/socket.h>
#include <errno.h>
#include <netinet/in.h>
#include <unistd.h>

int main(int argc, char* argv[]){

  char *ch ;

  if(argc == 2)
    ch = argv[1];
  else{
    printf("Argument non valide\n");
    exit(errno);
  }

  //regler la resolution
  struct hostent *host = gethostbyname("www.dict.org");
  struct in_addr ** in_address = (struct in_addr**)host->h_addr_list;
  char* address =  inet_ntoa(**in_address);

  printf("IP: %s\n",address);

  if(address == NULL){
    printf("Address non valide\n");
    exit(errno);
  }

  printf("Address\n");

  struct sockaddr_in address_sock;
  address_sock.sin_family = AF_INET;
  address_sock.sin_port   = htons(2628);
  inet_aton(address,&address_sock.sin_addr);

  printf("Address p1");

  int sock = socket(AF_INET,SOCK_STREAM,0);
  int r = connect(sock,(struct sockaddr *)&address_sock,(socklen_t)sizeof(struct sockaddr_in));

  printf("Ehh1");

  if(r == -1){
    printf("Echec de connection\n");
    exit(errno);
  }

  printf("Ehh");

  char buff[1024];
  char buff2[1024] = {*ch};
  int len = strlen(ch);
  
  buff2[len-1] = '\r';
  buff2[len]   = '\n';
  
  while(1){

    r=read(sock,buff,1023*sizeof(char));
    //printf("val: %d\n",r);
    //buff[r] = '\0';
    //printf("%s",buff);
    //if(buff[r-1] == '\n' && buff[r-2] == '\r')
    //break;
    printf("Rater..");
   }

  printf("C'est bien");

  /*
  send(sock,buff2,strlen(buff2),0);
  while(1){
    r=recv(sock,buff,1023*sizeof(char),0);
    buff[r] = '\0';
    printf("%s",buff);

    if(buff[r-1] == '\n' && buff[r-2] == '\r')
      break;

    printf("Rater..");
  }
  
  */
  
  return 0;
}
